// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Transfer extends EthereumEvent {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get to(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CancelProject extends EthereumEvent {
  get params(): CancelProject__Params {
    return new CancelProject__Params(this);
  }
}

export class CancelProject__Params {
  _event: CancelProject;

  constructor(event: CancelProject) {
    this._event = event;
  }

  get idProject(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class GiverAdded extends EthereumEvent {
  get params(): GiverAdded__Params {
    return new GiverAdded__Params(this);
  }
}

export class GiverAdded__Params {
  _event: GiverAdded;

  constructor(event: GiverAdded) {
    this._event = event;
  }

  get idGiver(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get addr(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get url(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class GiverUpdated extends EthereumEvent {
  get params(): GiverUpdated__Params {
    return new GiverUpdated__Params(this);
  }
}

export class GiverUpdated__Params {
  _event: GiverUpdated;

  constructor(event: GiverUpdated) {
    this._event = event;
  }

  get idGiver(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class DelegateAdded extends EthereumEvent {
  get params(): DelegateAdded__Params {
    return new DelegateAdded__Params(this);
  }
}

export class DelegateAdded__Params {
  _event: DelegateAdded;

  constructor(event: DelegateAdded) {
    this._event = event;
  }

  get idDelegate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class DelegateUpdated extends EthereumEvent {
  get params(): DelegateUpdated__Params {
    return new DelegateUpdated__Params(this);
  }
}

export class DelegateUpdated__Params {
  _event: DelegateUpdated;

  constructor(event: DelegateUpdated) {
    this._event = event;
  }

  get idDelegate(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ProjectAdded extends EthereumEvent {
  get params(): ProjectAdded__Params {
    return new ProjectAdded__Params(this);
  }
}

export class ProjectAdded__Params {
  _event: ProjectAdded;

  constructor(event: ProjectAdded) {
    this._event = event;
  }

  get idProject(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class ProjectUpdated extends EthereumEvent {
  get params(): ProjectUpdated__Params {
    return new ProjectUpdated__Params(this);
  }
}

export class ProjectUpdated__Params {
  _event: ProjectUpdated;

  constructor(event: ProjectUpdated) {
    this._event = event;
  }

  get idProject(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get url(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Contract__getPledgeDelegateResult {
  value0: BigInt;
  value1: Address;
  value2: string;

  constructor(value0: BigInt, value1: Address, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    map.set("value2", EthereumValue.fromString(this.value2));
    return map;
  }
}

export class Contract__getPledgeResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: Address;
  value7: i32;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: Address,
    value7: i32
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromUnsignedBigInt(this.value0));
    map.set("value1", EthereumValue.fromUnsignedBigInt(this.value1));
    map.set("value2", EthereumValue.fromUnsignedBigInt(this.value2));
    map.set("value3", EthereumValue.fromUnsignedBigInt(this.value3));
    map.set("value4", EthereumValue.fromUnsignedBigInt(this.value4));
    map.set("value5", EthereumValue.fromUnsignedBigInt(this.value5));
    map.set("value6", EthereumValue.fromAddress(this.value6));
    map.set("value7", EthereumValue.fromI32(this.value7));
    return map;
  }
}

export class Contract__getPledgeAdminResult {
  value0: i32;
  value1: Address;
  value2: string;
  value3: string;
  value4: BigInt;
  value5: BigInt;
  value6: boolean;
  value7: Address;

  constructor(
    value0: i32,
    value1: Address,
    value2: string,
    value3: string,
    value4: BigInt,
    value5: BigInt,
    value6: boolean,
    value7: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, EthereumValue> {
    let map = new TypedMap<string, EthereumValue>();
    map.set("value0", EthereumValue.fromI32(this.value0));
    map.set("value1", EthereumValue.fromAddress(this.value1));
    map.set("value2", EthereumValue.fromString(this.value2));
    map.set("value3", EthereumValue.fromString(this.value3));
    map.set("value4", EthereumValue.fromUnsignedBigInt(this.value4));
    map.set("value5", EthereumValue.fromUnsignedBigInt(this.value5));
    map.set("value6", EthereumValue.fromBoolean(this.value6));
    map.set("value7", EthereumValue.fromAddress(this.value7));
    return map;
  }
}

export class Contract extends SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  APP_ADDR_NAMESPACE(): Bytes {
    let result = super.call("APP_ADDR_NAMESPACE", []);
    return result[0].toBytes();
  }

  whitelistDisabled(): boolean {
    let result = super.call("whitelistDisabled", []);
    return result[0].toBoolean();
  }

  isProjectCanceled(projectId: BigInt): boolean {
    let result = super.call("isProjectCanceled", [
      EthereumValue.fromUnsignedBigInt(projectId)
    ]);
    return result[0].toBoolean();
  }

  PLUGIN_MANAGER_ROLE(): Bytes {
    let result = super.call("PLUGIN_MANAGER_ROLE", []);
    return result[0].toBytes();
  }

  numberOfPledges(): BigInt {
    let result = super.call("numberOfPledges", []);
    return result[0].toBigInt();
  }

  getPledgeDelegate(
    idPledge: BigInt,
    idxDelegate: BigInt
  ): Contract__getPledgeDelegateResult {
    let result = super.call("getPledgeDelegate", [
      EthereumValue.fromUnsignedBigInt(idPledge),
      EthereumValue.fromUnsignedBigInt(idxDelegate)
    ]);
    return new Contract__getPledgeDelegateResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toString()
    );
  }

  getRecoveryVault(): Address {
    let result = super.call("getRecoveryVault", []);
    return result[0].toAddress();
  }

  getPledge(idPledge: BigInt): Contract__getPledgeResult {
    let result = super.call("getPledge", [
      EthereumValue.fromUnsignedBigInt(idPledge)
    ]);
    return new Contract__getPledgeResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toAddress(),
      result[7].toI32()
    );
  }

  isValidPlugin(addr: Address): boolean {
    let result = super.call("isValidPlugin", [EthereumValue.fromAddress(addr)]);
    return result[0].toBoolean();
  }

  normalizePledge(idPledge: BigInt): BigInt {
    let result = super.call("normalizePledge", [
      EthereumValue.fromUnsignedBigInt(idPledge)
    ]);
    return result[0].toBigInt();
  }

  addDelegate(
    name: string,
    url: string,
    commitTime: BigInt,
    plugin: Address
  ): BigInt {
    let result = super.call("addDelegate", [
      EthereumValue.fromString(name),
      EthereumValue.fromString(url),
      EthereumValue.fromUnsignedBigInt(commitTime),
      EthereumValue.fromAddress(plugin)
    ]);
    return result[0].toBigInt();
  }

  numberOfPledgeAdmins(): BigInt {
    let result = super.call("numberOfPledgeAdmins", []);
    return result[0].toBigInt();
  }

  EVMSCRIPT_REGISTRY_APP_ID(): Bytes {
    let result = super.call("EVMSCRIPT_REGISTRY_APP_ID", []);
    return result[0].toBytes();
  }

  addGiver(
    addr: Address,
    name: string,
    url: string,
    commitTime: BigInt,
    plugin: Address
  ): BigInt {
    let result = super.call("addGiver", [
      EthereumValue.fromAddress(addr),
      EthereumValue.fromString(name),
      EthereumValue.fromString(url),
      EthereumValue.fromUnsignedBigInt(commitTime),
      EthereumValue.fromAddress(plugin)
    ]);
    return result[0].toBigInt();
  }

  addProject(
    name: string,
    url: string,
    projectAdmin: Address,
    parentProject: BigInt,
    commitTime: BigInt,
    plugin: Address
  ): BigInt {
    let result = super.call("addProject", [
      EthereumValue.fromString(name),
      EthereumValue.fromString(url),
      EthereumValue.fromAddress(projectAdmin),
      EthereumValue.fromUnsignedBigInt(parentProject),
      EthereumValue.fromUnsignedBigInt(commitTime),
      EthereumValue.fromAddress(plugin)
    ]);
    return result[0].toBigInt();
  }

  allowRecoverability(token: Address): boolean {
    let result = super.call("allowRecoverability", [
      EthereumValue.fromAddress(token)
    ]);
    return result[0].toBoolean();
  }

  addGiver1(
    name: string,
    url: string,
    commitTime: BigInt,
    plugin: Address
  ): BigInt {
    let result = super.call("addGiver", [
      EthereumValue.fromString(name),
      EthereumValue.fromString(url),
      EthereumValue.fromUnsignedBigInt(commitTime),
      EthereumValue.fromAddress(plugin)
    ]);
    return result[0].toBigInt();
  }

  appId(): Bytes {
    let result = super.call("appId", []);
    return result[0].toBytes();
  }

  getCodeHash(addr: Address): Bytes {
    let result = super.call("getCodeHash", [EthereumValue.fromAddress(addr)]);
    return result[0].toBytes();
  }

  ETH(): Address {
    let result = super.call("ETH", []);
    return result[0].toAddress();
  }

  getInitializationBlock(): BigInt {
    let result = super.call("getInitializationBlock", []);
    return result[0].toBigInt();
  }

  EVMSCRIPT_REGISTRY_APP(): Bytes {
    let result = super.call("EVMSCRIPT_REGISTRY_APP", []);
    return result[0].toBytes();
  }

  canPerform(_sender: Address, _role: Bytes, params: Array<BigInt>): boolean {
    let result = super.call("canPerform", [
      EthereumValue.fromAddress(_sender),
      EthereumValue.fromFixedBytes(_role),
      EthereumValue.fromUnsignedBigIntArray(params)
    ]);
    return result[0].toBoolean();
  }

  kernel(): Address {
    let result = super.call("kernel", []);
    return result[0].toAddress();
  }

  getPledgeAdmin(idAdmin: BigInt): Contract__getPledgeAdminResult {
    let result = super.call("getPledgeAdmin", [
      EthereumValue.fromUnsignedBigInt(idAdmin)
    ]);
    return new Contract__getPledgeAdminResult(
      result[0].toI32(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toString(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBoolean(),
      result[7].toAddress()
    );
  }

  getExecutor(_script: Bytes): Address {
    let result = super.call("getExecutor", [EthereumValue.fromBytes(_script)]);
    return result[0].toAddress();
  }

  vault(): Address {
    let result = super.call("vault", []);
    return result[0].toAddress();
  }
}

export class AddGiverAndDonateCall extends EthereumCall {
  get inputs(): AddGiverAndDonateCall__Inputs {
    return new AddGiverAndDonateCall__Inputs(this);
  }

  get outputs(): AddGiverAndDonateCall__Outputs {
    return new AddGiverAndDonateCall__Outputs(this);
  }
}

export class AddGiverAndDonateCall__Inputs {
  _call: AddGiverAndDonateCall;

  constructor(call: AddGiverAndDonateCall) {
    this._call = call;
  }

  get idReceiver(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get donorAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class AddGiverAndDonateCall__Outputs {
  _call: AddGiverAndDonateCall;

  constructor(call: AddGiverAndDonateCall) {
    this._call = call;
  }
}

export class ConfirmPaymentCall extends EthereumCall {
  get inputs(): ConfirmPaymentCall__Inputs {
    return new ConfirmPaymentCall__Inputs(this);
  }

  get outputs(): ConfirmPaymentCall__Outputs {
    return new ConfirmPaymentCall__Outputs(this);
  }
}

export class ConfirmPaymentCall__Inputs {
  _call: ConfirmPaymentCall;

  constructor(call: ConfirmPaymentCall) {
    this._call = call;
  }

  get idPledge(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConfirmPaymentCall__Outputs {
  _call: ConfirmPaymentCall;

  constructor(call: ConfirmPaymentCall) {
    this._call = call;
  }
}

export class AddValidPluginContractsCall extends EthereumCall {
  get inputs(): AddValidPluginContractsCall__Inputs {
    return new AddValidPluginContractsCall__Inputs(this);
  }

  get outputs(): AddValidPluginContractsCall__Outputs {
    return new AddValidPluginContractsCall__Outputs(this);
  }
}

export class AddValidPluginContractsCall__Inputs {
  _call: AddValidPluginContractsCall;

  constructor(call: AddValidPluginContractsCall) {
    this._call = call;
  }

  get contractHashes(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class AddValidPluginContractsCall__Outputs {
  _call: AddValidPluginContractsCall;

  constructor(call: AddValidPluginContractsCall) {
    this._call = call;
  }
}

export class UseWhitelistCall extends EthereumCall {
  get inputs(): UseWhitelistCall__Inputs {
    return new UseWhitelistCall__Inputs(this);
  }

  get outputs(): UseWhitelistCall__Outputs {
    return new UseWhitelistCall__Outputs(this);
  }
}

export class UseWhitelistCall__Inputs {
  _call: UseWhitelistCall;

  constructor(call: UseWhitelistCall) {
    this._call = call;
  }

  get useWhitelist(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class UseWhitelistCall__Outputs {
  _call: UseWhitelistCall;

  constructor(call: UseWhitelistCall) {
    this._call = call;
  }
}

export class WithdrawCall extends EthereumCall {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get idPledge(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}

export class TransferCall extends EthereumCall {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get idSender(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get idPledge(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get idReceiver(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }
}

export class DonateCall extends EthereumCall {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get idGiver(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get idReceiver(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}

export class NormalizePledgeCall extends EthereumCall {
  get inputs(): NormalizePledgeCall__Inputs {
    return new NormalizePledgeCall__Inputs(this);
  }

  get outputs(): NormalizePledgeCall__Outputs {
    return new NormalizePledgeCall__Outputs(this);
  }
}

export class NormalizePledgeCall__Inputs {
  _call: NormalizePledgeCall;

  constructor(call: NormalizePledgeCall) {
    this._call = call;
  }

  get idPledge(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class NormalizePledgeCall__Outputs {
  _call: NormalizePledgeCall;

  constructor(call: NormalizePledgeCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddDelegateCall extends EthereumCall {
  get inputs(): AddDelegateCall__Inputs {
    return new AddDelegateCall__Inputs(this);
  }

  get outputs(): AddDelegateCall__Outputs {
    return new AddDelegateCall__Outputs(this);
  }
}

export class AddDelegateCall__Inputs {
  _call: AddDelegateCall;

  constructor(call: AddDelegateCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get url(): string {
    return this._call.inputValues[1].value.toString();
  }

  get commitTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get plugin(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class AddDelegateCall__Outputs {
  _call: AddDelegateCall;

  constructor(call: AddDelegateCall) {
    this._call = call;
  }

  get idDelegate(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MWithdrawCall extends EthereumCall {
  get inputs(): MWithdrawCall__Inputs {
    return new MWithdrawCall__Inputs(this);
  }

  get outputs(): MWithdrawCall__Outputs {
    return new MWithdrawCall__Outputs(this);
  }
}

export class MWithdrawCall__Inputs {
  _call: MWithdrawCall;

  constructor(call: MWithdrawCall) {
    this._call = call;
  }

  get pledgesAmounts(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class MWithdrawCall__Outputs {
  _call: MWithdrawCall;

  constructor(call: MWithdrawCall) {
    this._call = call;
  }
}

export class RemoveValidPluginInstanceCall extends EthereumCall {
  get inputs(): RemoveValidPluginInstanceCall__Inputs {
    return new RemoveValidPluginInstanceCall__Inputs(this);
  }

  get outputs(): RemoveValidPluginInstanceCall__Outputs {
    return new RemoveValidPluginInstanceCall__Outputs(this);
  }
}

export class RemoveValidPluginInstanceCall__Inputs {
  _call: RemoveValidPluginInstanceCall;

  constructor(call: RemoveValidPluginInstanceCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveValidPluginInstanceCall__Outputs {
  _call: RemoveValidPluginInstanceCall;

  constructor(call: RemoveValidPluginInstanceCall) {
    this._call = call;
  }
}

export class AddGiverAndDonate1Call extends EthereumCall {
  get inputs(): AddGiverAndDonate1Call__Inputs {
    return new AddGiverAndDonate1Call__Inputs(this);
  }

  get outputs(): AddGiverAndDonate1Call__Outputs {
    return new AddGiverAndDonate1Call__Outputs(this);
  }
}

export class AddGiverAndDonate1Call__Inputs {
  _call: AddGiverAndDonate1Call;

  constructor(call: AddGiverAndDonate1Call) {
    this._call = call;
  }

  get idReceiver(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class AddGiverAndDonate1Call__Outputs {
  _call: AddGiverAndDonate1Call;

  constructor(call: AddGiverAndDonate1Call) {
    this._call = call;
  }
}

export class AddGiverCall extends EthereumCall {
  get inputs(): AddGiverCall__Inputs {
    return new AddGiverCall__Inputs(this);
  }

  get outputs(): AddGiverCall__Outputs {
    return new AddGiverCall__Outputs(this);
  }
}

export class AddGiverCall__Inputs {
  _call: AddGiverCall;

  constructor(call: AddGiverCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get url(): string {
    return this._call.inputValues[2].value.toString();
  }

  get commitTime(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get plugin(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class AddGiverCall__Outputs {
  _call: AddGiverCall;

  constructor(call: AddGiverCall) {
    this._call = call;
  }

  get idGiver(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddProjectCall extends EthereumCall {
  get inputs(): AddProjectCall__Inputs {
    return new AddProjectCall__Inputs(this);
  }

  get outputs(): AddProjectCall__Outputs {
    return new AddProjectCall__Outputs(this);
  }
}

export class AddProjectCall__Inputs {
  _call: AddProjectCall;

  constructor(call: AddProjectCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get url(): string {
    return this._call.inputValues[1].value.toString();
  }

  get projectAdmin(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get parentProject(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get commitTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get plugin(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class AddProjectCall__Outputs {
  _call: AddProjectCall;

  constructor(call: AddProjectCall) {
    this._call = call;
  }

  get idProject(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CancelProjectCall extends EthereumCall {
  get inputs(): CancelProjectCall__Inputs {
    return new CancelProjectCall__Inputs(this);
  }

  get outputs(): CancelProjectCall__Outputs {
    return new CancelProjectCall__Outputs(this);
  }
}

export class CancelProjectCall__Inputs {
  _call: CancelProjectCall;

  constructor(call: CancelProjectCall) {
    this._call = call;
  }

  get idProject(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelProjectCall__Outputs {
  _call: CancelProjectCall;

  constructor(call: CancelProjectCall) {
    this._call = call;
  }
}

export class AddValidPluginInstanceCall extends EthereumCall {
  get inputs(): AddValidPluginInstanceCall__Inputs {
    return new AddValidPluginInstanceCall__Inputs(this);
  }

  get outputs(): AddValidPluginInstanceCall__Outputs {
    return new AddValidPluginInstanceCall__Outputs(this);
  }
}

export class AddValidPluginInstanceCall__Inputs {
  _call: AddValidPluginInstanceCall;

  constructor(call: AddValidPluginInstanceCall) {
    this._call = call;
  }

  get addr(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddValidPluginInstanceCall__Outputs {
  _call: AddValidPluginInstanceCall;

  constructor(call: AddValidPluginInstanceCall) {
    this._call = call;
  }
}

export class AddGiver1Call extends EthereumCall {
  get inputs(): AddGiver1Call__Inputs {
    return new AddGiver1Call__Inputs(this);
  }

  get outputs(): AddGiver1Call__Outputs {
    return new AddGiver1Call__Outputs(this);
  }
}

export class AddGiver1Call__Inputs {
  _call: AddGiver1Call;

  constructor(call: AddGiver1Call) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get url(): string {
    return this._call.inputValues[1].value.toString();
  }

  get commitTime(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get plugin(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class AddGiver1Call__Outputs {
  _call: AddGiver1Call;

  constructor(call: AddGiver1Call) {
    this._call = call;
  }

  get idGiver(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferToVaultCall extends EthereumCall {
  get inputs(): TransferToVaultCall__Inputs {
    return new TransferToVaultCall__Inputs(this);
  }

  get outputs(): TransferToVaultCall__Outputs {
    return new TransferToVaultCall__Outputs(this);
  }
}

export class TransferToVaultCall__Inputs {
  _call: TransferToVaultCall;

  constructor(call: TransferToVaultCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferToVaultCall__Outputs {
  _call: TransferToVaultCall;

  constructor(call: TransferToVaultCall) {
    this._call = call;
  }
}

export class CancelPledgeCall extends EthereumCall {
  get inputs(): CancelPledgeCall__Inputs {
    return new CancelPledgeCall__Inputs(this);
  }

  get outputs(): CancelPledgeCall__Outputs {
    return new CancelPledgeCall__Outputs(this);
  }
}

export class CancelPledgeCall__Inputs {
  _call: CancelPledgeCall;

  constructor(call: CancelPledgeCall) {
    this._call = call;
  }

  get idPledge(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelPledgeCall__Outputs {
  _call: CancelPledgeCall;

  constructor(call: CancelPledgeCall) {
    this._call = call;
  }
}

export class RemoveValidPluginContractCall extends EthereumCall {
  get inputs(): RemoveValidPluginContractCall__Inputs {
    return new RemoveValidPluginContractCall__Inputs(this);
  }

  get outputs(): RemoveValidPluginContractCall__Outputs {
    return new RemoveValidPluginContractCall__Outputs(this);
  }
}

export class RemoveValidPluginContractCall__Inputs {
  _call: RemoveValidPluginContractCall;

  constructor(call: RemoveValidPluginContractCall) {
    this._call = call;
  }

  get contractHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RemoveValidPluginContractCall__Outputs {
  _call: RemoveValidPluginContractCall;

  constructor(call: RemoveValidPluginContractCall) {
    this._call = call;
  }
}

export class InitializeCall extends EthereumCall {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _vault(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class AddValidPluginContractCall extends EthereumCall {
  get inputs(): AddValidPluginContractCall__Inputs {
    return new AddValidPluginContractCall__Inputs(this);
  }

  get outputs(): AddValidPluginContractCall__Outputs {
    return new AddValidPluginContractCall__Outputs(this);
  }
}

export class AddValidPluginContractCall__Inputs {
  _call: AddValidPluginContractCall;

  constructor(call: AddValidPluginContractCall) {
    this._call = call;
  }

  get contractHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class AddValidPluginContractCall__Outputs {
  _call: AddValidPluginContractCall;

  constructor(call: AddValidPluginContractCall) {
    this._call = call;
  }
}

export class UpdateDelegateCall extends EthereumCall {
  get inputs(): UpdateDelegateCall__Inputs {
    return new UpdateDelegateCall__Inputs(this);
  }

  get outputs(): UpdateDelegateCall__Outputs {
    return new UpdateDelegateCall__Outputs(this);
  }
}

export class UpdateDelegateCall__Inputs {
  _call: UpdateDelegateCall;

  constructor(call: UpdateDelegateCall) {
    this._call = call;
  }

  get idDelegate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get newUrl(): string {
    return this._call.inputValues[3].value.toString();
  }

  get newCommitTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpdateDelegateCall__Outputs {
  _call: UpdateDelegateCall;

  constructor(call: UpdateDelegateCall) {
    this._call = call;
  }
}

export class MNormalizePledgeCall extends EthereumCall {
  get inputs(): MNormalizePledgeCall__Inputs {
    return new MNormalizePledgeCall__Inputs(this);
  }

  get outputs(): MNormalizePledgeCall__Outputs {
    return new MNormalizePledgeCall__Outputs(this);
  }
}

export class MNormalizePledgeCall__Inputs {
  _call: MNormalizePledgeCall;

  constructor(call: MNormalizePledgeCall) {
    this._call = call;
  }

  get pledges(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class MNormalizePledgeCall__Outputs {
  _call: MNormalizePledgeCall;

  constructor(call: MNormalizePledgeCall) {
    this._call = call;
  }
}

export class MTransferCall extends EthereumCall {
  get inputs(): MTransferCall__Inputs {
    return new MTransferCall__Inputs(this);
  }

  get outputs(): MTransferCall__Outputs {
    return new MTransferCall__Outputs(this);
  }
}

export class MTransferCall__Inputs {
  _call: MTransferCall;

  constructor(call: MTransferCall) {
    this._call = call;
  }

  get idSender(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get pledgesAmounts(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get idReceiver(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class MTransferCall__Outputs {
  _call: MTransferCall;

  constructor(call: MTransferCall) {
    this._call = call;
  }
}

export class UpdateGiverCall extends EthereumCall {
  get inputs(): UpdateGiverCall__Inputs {
    return new UpdateGiverCall__Inputs(this);
  }

  get outputs(): UpdateGiverCall__Outputs {
    return new UpdateGiverCall__Outputs(this);
  }
}

export class UpdateGiverCall__Inputs {
  _call: UpdateGiverCall;

  constructor(call: UpdateGiverCall) {
    this._call = call;
  }

  get idGiver(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get newUrl(): string {
    return this._call.inputValues[3].value.toString();
  }

  get newCommitTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpdateGiverCall__Outputs {
  _call: UpdateGiverCall;

  constructor(call: UpdateGiverCall) {
    this._call = call;
  }
}

export class CancelPaymentCall extends EthereumCall {
  get inputs(): CancelPaymentCall__Inputs {
    return new CancelPaymentCall__Inputs(this);
  }

  get outputs(): CancelPaymentCall__Outputs {
    return new CancelPaymentCall__Outputs(this);
  }
}

export class CancelPaymentCall__Inputs {
  _call: CancelPaymentCall;

  constructor(call: CancelPaymentCall) {
    this._call = call;
  }

  get idPledge(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelPaymentCall__Outputs {
  _call: CancelPaymentCall;

  constructor(call: CancelPaymentCall) {
    this._call = call;
  }
}

export class UpdateProjectCall extends EthereumCall {
  get inputs(): UpdateProjectCall__Inputs {
    return new UpdateProjectCall__Inputs(this);
  }

  get outputs(): UpdateProjectCall__Outputs {
    return new UpdateProjectCall__Outputs(this);
  }
}

export class UpdateProjectCall__Inputs {
  _call: UpdateProjectCall;

  constructor(call: UpdateProjectCall) {
    this._call = call;
  }

  get idProject(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newAddr(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get newName(): string {
    return this._call.inputValues[2].value.toString();
  }

  get newUrl(): string {
    return this._call.inputValues[3].value.toString();
  }

  get newCommitTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class UpdateProjectCall__Outputs {
  _call: UpdateProjectCall;

  constructor(call: UpdateProjectCall) {
    this._call = call;
  }
}
